<?xml version="1.0"?>

<adapters_conf id="LOAD_TESTS">

    <metadata_provider>

        <adapter_class>com.lightstreamer.adapters.metadata.LiteralBasedProvider</adapter_class>
      
        <!-- Optional.
             Define values to be returned in getAllowedMaxBandwidth(),
             getAllowedMaxItemFrequency(), getAllowedBufferSize() and
             getDistinctSnapshotLength() methods.
             See LiteralBasedProvider javadoc. 
        -->
        <!--        
            <param name="max_bandwidth">40</param>
            
            <param name="max_frequency">3</param>
            
            <param name="buffer_size">30</param>
        -->
        
        <!-- by default, we don't support the snapshot for DISTINCT mode;
             supporting it may have a strong impact on memory requirement;
             enable the support only if needed. 
        -->
        <param name="distinct_snapshot_length">0</param>
               
    </metadata_provider>

    <data_provider>

        <adapter_class>com.lightstreamer.load_test.adapter.AdapterSimulator</adapter_class>
   
        <!-- Global number of items generated by the Adapter Simulator. -->
        <param name="numberOfItems">500</param>
    
        <!-- Number of fields for each item update.
             The number of fields is the same for all the items. -->
        <param name="numberOfFields">5</param>
    
        <!-- The size in bytes of each update field. -->
        <param name="bytesPerField">10</param>
        
        <!-- Use the first field to track the timestamp of the update
             generation moment. -->
        <param name="injectTimestamps">false</param>
        
        <!-- Optional (default is false).
             If "injectTimestamps" is true, use, as the timestamp, the time
             set by the internal scheduler for the generation of the update,
             instead of the actual time in which the update is generated.
             The former may be earlier if the machine is overloaded. -->
        <!--
        <param name="useSchedulingTimestamps">true</param>
        -->
        
        <!-- Interval in milliseconds between consecutive updates on the same item.
             The theoretical update time is constant, but some floating can be introduced by
             the OS. -->
        <param name="updateIntervalMillis">3000</param>
        
        <!-- Subscription mode used by the Client Simulators. -->
        <param name="subscriptionMode">RAW</param>
        
        <!-- Optional. If true, requires tick-by-tick delivery.
          This guarantees that even items with a high frequency
          are received without filtering. If false or missing,
          event filtering is possible, especially in case of
          bandwidth or "MAX_DELAY_MILLIS" constraints. -->
        <param name="unfilteredSubscription">true</param>
        
        <!-- Optional. Specify the resampling frequency and buffer
          size to apply to the update flow for each item.
          If "resamplingFrequency" is missing, the default frequency
          is "unlimited" (i.e. possibly limited by Server-side constraints);
          if "resamplingBufferSize" is missing, the default buffer size
          is 1 for MERGE mode and "unlimited" for other modes.
          These settings are ignored if "unfilteredSubscription" is set to true. -->
         <!-- <param name="resamplingFrequency">1.5</param> -->
         <!-- <param name="resamplingBufferSize">10</param> -->
        
        <!-- Initial pause after Server startup before the adapter simulator starts producing updates. -->
        <param name="initWaitMillis">2000</param>
        
        <!-- Size of the thread pool used in update generation scheduling. -->
        <param name="scheduledThreadPoolLength">1</param>
        
        <!-- Time distance in milliseconds between the beginning of data flow generation for
             two consecutive items. -->
        <param name="delayItemStartMillis">2.0</param>
        
        <!-- Number of items to be processed in a single loop, despite update times configuration.
             For each update cycle, all the updates for those items are sent at the time
             scheduled for the update of the first item.
             This makes the new updates be sent in bursts, with reduced thread switching. 
             E.g.: delayItemStartMillis=2; itemBurst=10.
                   the first job, which generates items from 1 to 10, starts after 2 millis;
                   the second job, which generates items from 11 to 20, starts after 22 millis;
                   the third job, which generates items from 21 to 30, starts after 42 millis;
                   etc.
             -->
        <param name="itemBurst">10</param>
 
    </data_provider>
    
</adapters_conf>
